---
- name: Verify k8s-tools cluster deployment
  hosts: k8s-tools-controlplane[0] # Target the first control plane node
  become: no # kubectl commands usually run as the user
  gather_facts: no

  vars:
    kubeconfig_path: "{{ ansible_env.HOME }}/.kube/config-k8s-tools"

  tasks:
    - name: Check if kubeconfig file exists
      stat:
        path: "{{ kubeconfig_path }}"
      register: kubeconfig_stat

    - name: Assert kubeconfig file exists
      assert:
        that:
          - kubeconfig_stat.stat.exists
          - kubeconfig_stat.stat.isreg
        fail_msg: "Kubeconfig file {{ kubeconfig_path }} does not exist or is not a regular file."
        success_msg: "Kubeconfig file {{ kubeconfig_path }} found."

    - name: Get Kubernetes nodes
      command: "kubectl --kubeconfig {{ kubeconfig_path }} get nodes -o wide"
      register: kubectl_get_nodes
      changed_when: false # This command does not change state

    - name: Display kubectl get nodes output
      debug:
        var: kubectl_get_nodes.stdout_lines

    - name: Assert kubectl get nodes was successful
      assert:
        that:
          - kubectl_get_nodes.rc == 0
        fail_msg: "kubectl get nodes command failed. RC={{ kubectl_get_nodes.rc }}, STDERR={{ kubectl_get_nodes.stderr }}"
        success_msg: "kubectl get nodes command was successful."

    - name: Assert all nodes are in 'Ready' state
      assert:
        that:
          - "' Ready ' in item" # Check for ' Ready ' (with spaces) to avoid matching 'NotReady'
        fail_msg: "Node {{ item.split(' ')[0] }} is not in 'Ready' state. Full line: {{ item }}" # Assumes first element is node name
        success_msg: "All checked lines indicate a 'Ready' status."
      loop: "{{ kubectl_get_nodes.stdout_lines[1:] }}" # Skip the header line
      when: kubectl_get_nodes.stdout_lines | length > 1 # Only run if there are node lines
