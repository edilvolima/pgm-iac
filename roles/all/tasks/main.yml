---
# 1. Preparação do ambiente para instalação do Docker
- name: Remover pacotes que podem ter algum conflito com o Docker
  apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - podman-docker
      - containerd
      - runc
    state: absent

- name: Atualiza o cache de pacotes do sistema
  apt:
    update_cache: yes

- name: Instala dependências do sistema
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - gnupg
      - lsb-release
    state: present

- name: Adiciona chave GPG oficial do Docker
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Adiciona repositório Docker
  apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
#     state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

# - name: Download and install Docker GPG key
#   ansible.builtin.shell:
#     cmd: curl -fsSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#     creates: /etc/apt/keyrings/docker.gpg
#   when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

# - name: Add Docker APT repository
#   ansible.builtin.apt_repository:
#     repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
#     state: present
#     filename: docker
#   when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'


- name: Instala o Docker e Docker Compose
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: yes

- name: Adicionar usuário ao grupo docker
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{ docker_users }}"

- name: Habilitar e iniciar serviço Docker
  service:
    name: docker
    state: started
    enabled: yes